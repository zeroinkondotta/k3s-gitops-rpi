---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
  annotations:
    fluxcd.io/ignore: "false"
    fluxcd.io/automated: "false"
spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 8.13.0
  values:
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResource: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - "true"
    alertmanager:
#      ingress:
#        enabled: true
#        annotations:
#          kubernetes.io/ingress.class: "nginx"
      alertmanagerSpec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/worker
                  operator: In
                  values:
                  - "true"
#        storage:
#          volumeClaimTemplate:
#            spec:
#              storageClassName: rook-ceph-block
#              resources:
#                requests:
#                  storage: 10Gi
    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
    grafana:
      deploymentStrategy:
        type: Recreate
#      podAnnotations:
#        backup.velero.io/backup-volumes: storage
#      persistence:
#        enabled: true
#        storageClassName: "rook-ceph-block"
#        size: 10Gi
#        accessModes:
#        - ReadWriteOnce
      env:
        GF_EXPLORE_ENABLED: true
#      ingress:
#        enabled: true
#        annotations:
#          kubernetes.io/ingress.class: "nginx"
      sidecar:
        dashboards:
          provider:
            disableDelete: false
            allowUiUpdates: true
      plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            allowUiUpdates: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
#          ceph-cluster:
#            # Ref: https://grafana.com/grafana/dashboards/2842
#            gnetId: 2842
#            revision: 11
#            datasource: Prometheus
#          ceph-osd:
#            # Ref: https://grafana.com/grafana/dashboards/5336
#            gnetId: 5336
#            revision: 3
#            datasource: Prometheus
#          ceph-pools:
#            # Ref: https://grafana.com/grafana/dashboards/5342
#            gnetId: 5342
#            revision: 3
#            datasource: Prometheus
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
#          blocky:
#            url: https://raw.githubusercontent.com/0xERR0R/blocky/master/docs/blocky-grafana.json
#            datasource: Prometheus
#          apc-ups:
#            url: https://raw.githubusercontent.com/onedr0p/k3s-gitops/master/dashboards/apc-ups.json
#            datasource: Prometheus
#          cyberpower-pdu:
#            url: https://raw.githubusercontent.com/onedr0p/k3s-gitops/master/dashboards/cyberpower-pdu.json
#            datasource: Prometheus
#      additionalDataSources:
      - name: loki
        type: loki
        access: proxy
        url: http://loki.logging.svc.cluster.local:3100
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    kubeEtcd:
      enabled: false
    # Does not work right in k3s
    kubeControllerManager:
      enabled: false
    # Does not work right in k3s
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    prometheus:
#      ingress:
#        enabled: true
#        annotations:
#          kubernetes.io/ingress.class: "nginx"
      prometheusSpec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/worker
                  operator: In
                  values:
                  - "true"
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 30d
        enableAdminAPI: true
        walCompression: true
#        storageSpec:
#          volumeClaimTemplate:
#            spec:
#              storageClassName: rook-ceph-block
#              resources:
#                requests:
#                  storage: 100Gi
#        additionalScrapeConfigs:
#        - job_name: 'node-exporter'
#          static_configs:
#          - targets:
#            - 192.168.1.170:9100
#  valueFileSecrets:
#  - name: "prometheus-operator-helm-values"
