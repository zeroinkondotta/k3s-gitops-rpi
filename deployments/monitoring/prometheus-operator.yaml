---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
  annotations:
    fluxcd.io/ignore: false
    fluxcd.io/automated: "false"
    fluxcd.io/tag.grafana: semver:~6
spec:
  releaseName: prometheus-operator
  helmVersion: v3
  rollback:
    enable: true
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 8.12.13
  values:
    # helm install prometheus-operator stable/prometheus-operator  --namespace monitor --set grafana.sidecar.image=4k1l/k8s-sidecar-arm:v0.1.20 --set kube-state-metrics.image.repository=4k1l/kube-state-metrics-arm --set kube-state-metrics.image.tag=v1.9.3 --set prometheusOperator.tlsProxy.image.repository=4k1l/ghostunnel-arm  --set prometheusOperator.admissionWebhooks.patch.image.repository=jettech/kube-webhook-certgen --set prometheusOperator.admissionWebhooks.patch.image.tag=v1.2.0 --set prometheusOperator.image.repository=maxromanovsky/prometheus-operator --set prometheusOperator.configmapReloadImage.repository=jimmidyson/configmap-reload --set prometheusOperator.configmapReloadImage.tag=v0.3.0 --set prometheusOperator.prometheusConfigReloaderImage.repository=maxromanovsky/prometheus-config-reloader --set prometheusOperator.hyperkubeImage.repository=gcr.io/google_containers/hyperkube-arm --set prometheusOperator.tlsProxy.enabled=false --set prometheusOperator.admissionWebhooks.enabled=false
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResource: true
      tlsProxy:
        enabled: false
        image:
          repository: 4k1l/ghostunnel-arm
      admissionWebhooks:
        enabled: false
        patch:
          image:
            repository: jettech/kube-webhook-certgen
            tag: v1.2.0
      image:
        repository: maxromanovsky/prometheus-operator
      configReloadImage:
        repository: k√¨jimmydyson/configmap-reload
        tag: v0.3.0
      prometheusConfigReloaderImage:
        repository: maxromanovsky/prometheus-config-reloader
      kyperkubeImage:
        repository: gcr.io/google_containers/hyperkube-arm
    #  ingress:
    #    enabled: true
    #    annotations:
    #      kubernetes.io/ingress.class: "nginx"
    kube-state-metrics:
      image:
        repository: 4k1l/kube-state-metrics-arm
        tag: v1.9.3
    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
    grafana:
      deploymentStrategy:
        type: Recreate
      sidecar:
        image: 4k1l/k8s-sidecar-arm:v0.1.20
      env:
        GF_EXPLORE_ENABLED: true
        GF_DISABLE_SANITIZE_HTML: true
      #ingress:
      #  enabled: true
      #  annotations:
      #    kubernetes.io/ingress.class: "nginx"
      plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
          vernemq:
            url: https://raw.githubusercontent.com/vernemq/vernemq/master/metrics_scripts/grafana/VerneMQ%20Node%20Metrics.json
            datasource: Prometheus
          velero:
            url: https://grafana.com/api/dashboards/11055/revisions/2/download
            datasource: Prometheus
          flux:
            url: https://grafana.com/api/dashboards/10475/revisions/1/download
            datasource: Prometheus
          blocky:
            url: https://raw.githubusercontent.com/0xERR0R/blocky/master/docs/blocky-grafana.json
            datasource: Prometheus
      additionalDataSources:
      - name: loki
        type: loki
        access: proxy
        url: http://loki.logs.svc.cluster.local:3100
      #- name: influxdb
      #  type: influxdb
      #  access: proxy
      #  url: http://influxdb:8086
      #  database: telegraf
      #- name: speedtests
      #  type: influxdb
      #  access: proxy
      #  url: http://influxdb:8086
      #  database: speedtests
      #- name: uptimerobot
      #  type: influxdb
      #  access: proxy
      #  url: http://influxdb:8086
      #  database: uptimerobot
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    prometheus-node-exporter:
      tolerations:
      - key: "arm"
        operator: "Exists"
      - key: "armhf"
        operator: "Exists"
    prometheus:
      #ingress:
      #  enabled: true
      #  annotations:
      #    kubernetes.io/ingress.class: "nginx"
      prometheusSpec:
#        image:
#          repository: quay.io/prometheus/prometheus
#          tag: v2.9.1
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 30d
        enableAdminAPI: true
